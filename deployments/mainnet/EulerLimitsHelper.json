{
  "address": "0x1Fae3BFe9b9486c415Ae7F5F4FF087Bd73ad2A74",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eulerAccount",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault1",
          "type": "address"
        },
        {
          "internalType": "uint112",
          "name": "reserve0",
          "type": "uint112"
        },
        {
          "internalType": "uint112",
          "name": "reserve1",
          "type": "uint112"
        }
      ],
      "name": "calcLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x50215867674e037e258c6043320387e88dc24b2d0080f8c384e6334dd005cfaf",
  "receipt": {
    "to": null,
    "from": "0x56E44874F624EbDE6efCc783eFD685f0FBDC6dcF",
    "contractAddress": "0x1Fae3BFe9b9486c415Ae7F5F4FF087Bd73ad2A74",
    "transactionIndex": 15,
    "gasUsed": "433362",
    "logsBloom": "0x
    "blockHash": "0xb5374a1f064dd20153bd9164653677025ae91f67a15c2908cafdcc368354b019",
    "transactionHash": "0x50215867674e037e258c6043320387e88dc24b2d0080f8c384e6334dd005cfaf",
    "logs": [],
    "blockNumber": 23018532,
    "cumulativeGasUsed": "4571011",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c5966e17ed75146d46e611b95c4e4862",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eulerAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault1\",\"type\":\"address\"},{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"calcLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EulerLimitsHelper.sol\":\"EulerLimitsHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/EulerLimitsHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IEVault {\\n    function debtOf(address account) external view returns (uint256);\\n    function maxDeposit(address account) external view returns (uint256);\\n    function cash() external view returns (uint256);\\n    function caps() external view returns (uint256, uint16);\\n    function totalBorrows() external view returns (uint256);\\n    function convertToAssets(uint256 shares) external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\\ncontract EulerLimitsHelper {\\n    uint256 private constant _MAX_U112 = type(uint112).max;\\n\\n    function calcLimits(\\n        address eulerAccount,\\n        address _vault0,\\n        address _vault1,\\n        uint112 reserve0,\\n        uint112 reserve1\\n    ) external view returns (uint256, uint256, uint256, uint256) {\\n        return (\\n            _calcInLimit(eulerAccount, IEVault(_vault0)),\\n            _calcInLimit(eulerAccount, IEVault(_vault1)),\\n            _calcOutLimit(eulerAccount, IEVault(_vault0), reserve0),\\n            _calcOutLimit(eulerAccount, IEVault(_vault1), reserve1)\\n        );\\n    }\\n\\n    function _calcInLimit(address eulerAccount, IEVault vault) internal view returns (uint256) {\\n        uint256 maxDeposit = vault.debtOf(eulerAccount) + vault.maxDeposit(eulerAccount);\\n        return maxDeposit < _MAX_U112 ? maxDeposit : _MAX_U112;\\n    }\\n\\n    function _calcOutLimit(address eulerAccount, IEVault vault, uint112 reserveLimit) internal view returns (uint256) {\\n        uint256 outLimit = _MAX_U112;\\n\\n        // Reserve limit\\n        if (reserveLimit < outLimit) {\\n            outLimit = reserveLimit;\\n        }\\n\\n        // Cash and borrow cap logic\\n        {\\n            uint256 cash = vault.cash();\\n            if (cash < outLimit) {\\n                outLimit = cash;\\n            }\\n\\n            (, uint16 borrowCap) = vault.caps();\\n            uint256 maxWithdraw = _decodeCap(uint256(borrowCap));\\n            maxWithdraw = vault.totalBorrows() > maxWithdraw ? 0 : maxWithdraw - vault.totalBorrows();\\n            if (maxWithdraw < outLimit) {\\n                maxWithdraw += vault.convertToAssets(vault.balanceOf(eulerAccount));\\n                if (maxWithdraw < outLimit) outLimit = maxWithdraw;\\n            }\\n        }\\n\\n        return outLimit;\\n    }\\n\\n    function _decodeCap(uint256 amountCap) internal pure returns (uint256) {\\n        if (amountCap == 0) return type(uint256).max;\\n\\n        unchecked {\\n            // Cannot overflow because this is less than 2**256:\\n            //   10**(2**6 - 1) * (2**10 - 1) = 1.023e+66\\n            return 10 ** (amountCap & 63) * (amountCap >> 6) / 100;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8c75adb64f23278f03777ca49c9c14faabe5651ad88a2e88dbb9091531113d03\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60808060405234610016576106ee908161001b8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63dbc12dcf14610024575f80fd5b346100fb5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fb5773ffffffffffffffffffffffffffffffffffffffff60043581811681036100fb576024358281168091036100fb576044359283168093036100fb57606435916dffffffffffffffffffffffffffff9384841684036100fb5760843594851685036100fb576080946100e3916100dd6100cb86866101a7565b966100d683876101a7565b96866102e4565b936102e4565b91604051938452602084015260408301526060820152f35b5f80fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014057604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9190820180921161017a57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff80921691604051917fd283e75f000000000000000000000000000000000000000000000000000000008352168060048301526020918281602481875afa9182156102a85783915f936102b3575b506024604051809681937f402d267d00000000000000000000000000000000000000000000000000000000835260048301525afa9182156102a8575f92610276575b50610256925061016d565b6dffffffffffffffffffffffffffff80821015610271575090565b905090565b90915082813d83116102a1575b61028d81836100ff565b810103126100fb576102569151905f61024b565b503d610283565b6040513d5f823e3d90fd5b8281939294503d83116102dd575b6102cb81836100ff565b810103126100fb57829051915f610209565b503d6102c1565b6dffffffffffffffffffffffffffff809316838110610672575b5073ffffffffffffffffffffffffffffffffffffffff809216916040918251907f961be391000000000000000000000000000000000000000000000000000000008252602091600490838183818a5afa908115610633575f91610645575b5087811061063d575b5084517f18e22d98000000000000000000000000000000000000000000000000000000008152858183818a5afa908115610633575f916105f7575b5061ffff6103ae911661067a565b85517f47bd37180000000000000000000000000000000000000000000000000000000090818152858185818c5afa9081156105ed579083915f916105bc575b50111561052f5750505f935b87851061040b575b5050505050505090565b8551927f70a0823100000000000000000000000000000000000000000000000000000000845216818301528282602481895afa91821561052557908392915f926104f3575b50602490865197889384927f07a2d13a0000000000000000000000000000000000000000000000000000000084528301525afa9283156104ea57505f926104b8575b5061049d925061016d565b8181106104b0575b808080808080610401565b90505f6104a5565b90915082813d83116104e3575b6104cf81836100ff565b810103126100fb5761049d9151905f610492565b503d6104c5565b513d5f823e3d90fd5b8381949293503d831161051e575b61050b81836100ff565b810103126100fb57905182916024610450565b503d610501565b85513d5f823e3d90fd5b8651908152848184818b5afa9081156105b2575f91610585575b50810390811161055957936103f9565b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b90508481813d83116105ab575b61059c81836100ff565b810103126100fb57515f610549565b503d610592565b87513d5f823e3d90fd5b809250878092503d83116105e6575b6105d581836100ff565b810103126100fb578290515f6103ed565b503d6105cb565b88513d5f823e3d90fd5b90508581813d831161062c575b61060e81836100ff565b810103126100fb5783015161ffff811681036100fb5761ffff6103a0565b503d610604565b86513d5f823e3d90fd5b96505f610365565b90508381813d831161066b575b61065c81836100ff565b810103126100fb57515f61035c565b503d610652565b92505f6102fe565b80156106935780603f60649260061c9116600a0a020490565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9056fea264697066735822122016281021c0834052adb567aa38681736117a81dbf0526f60ebde779f661af9a164736f6c63430008170033",
  "deployedBytecode": "0x60806040526004361015610011575f80fd5b5f3560e01c63dbc12dcf14610024575f80fd5b346100fb5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fb5773ffffffffffffffffffffffffffffffffffffffff60043581811681036100fb576024358281168091036100fb576044359283168093036100fb57606435916dffffffffffffffffffffffffffff9384841684036100fb5760843594851685036100fb576080946100e3916100dd6100cb86866101a7565b966100d683876101a7565b96866102e4565b936102e4565b91604051938452602084015260408301526060820152f35b5f80fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014057604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9190820180921161017a57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff80921691604051917fd283e75f000000000000000000000000000000000000000000000000000000008352168060048301526020918281602481875afa9182156102a85783915f936102b3575b506024604051809681937f402d267d00000000000000000000000000000000000000000000000000000000835260048301525afa9182156102a8575f92610276575b50610256925061016d565b6dffffffffffffffffffffffffffff80821015610271575090565b905090565b90915082813d83116102a1575b61028d81836100ff565b810103126100fb576102569151905f61024b565b503d610283565b6040513d5f823e3d90fd5b8281939294503d83116102dd575b6102cb81836100ff565b810103126100fb57829051915f610209565b503d6102c1565b6dffffffffffffffffffffffffffff809316838110610672575b5073ffffffffffffffffffffffffffffffffffffffff809216916040918251907f961be391000000000000000000000000000000000000000000000000000000008252602091600490838183818a5afa908115610633575f91610645575b5087811061063d575b5084517f18e22d98000000000000000000000000000000000000000000000000000000008152858183818a5afa908115610633575f916105f7575b5061ffff6103ae911661067a565b85517f47bd37180000000000000000000000000000000000000000000000000000000090818152858185818c5afa9081156105ed579083915f916105bc575b50111561052f5750505f935b87851061040b575b5050505050505090565b8551927f70a0823100000000000000000000000000000000000000000000000000000000845216818301528282602481895afa91821561052557908392915f926104f3575b50602490865197889384927f07a2d13a0000000000000000000000000000000000000000000000000000000084528301525afa9283156104ea57505f926104b8575b5061049d925061016d565b8181106104b0575b808080808080610401565b90505f6104a5565b90915082813d83116104e3575b6104cf81836100ff565b810103126100fb5761049d9151905f610492565b503d6104c5565b513d5f823e3d90fd5b8381949293503d831161051e575b61050b81836100ff565b810103126100fb57905182916024610450565b503d610501565b85513d5f823e3d90fd5b8651908152848184818b5afa9081156105b2575f91610585575b50810390811161055957936103f9565b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b90508481813d83116105ab575b61059c81836100ff565b810103126100fb57515f610549565b503d610592565b87513d5f823e3d90fd5b809250878092503d83116105e6575b6105d581836100ff565b810103126100fb578290515f6103ed565b503d6105cb565b88513d5f823e3d90fd5b90508581813d831161062c575b61060e81836100ff565b810103126100fb5783015161ffff811681036100fb5761ffff6103a0565b503d610604565b86513d5f823e3d90fd5b96505f610365565b90508381813d831161066b575b61065c81836100ff565b810103126100fb57515f61035c565b503d610652565b92505f6102fe565b80156106935780603f60649260061c9116600a0a020490565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9056fea264697066735822122016281021c0834052adb567aa38681736117a81dbf0526f60ebde779f661af9a164736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}